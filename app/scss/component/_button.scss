@use "../abstracts/" as *;

/* button 
--------------------------------------------------*/
.sc-button {
  display: inline-block;
  background-color: $color-6;
  box-sizing: border-box;
  padding: 14px 38px;
  border-radius: 200px;
  @include transition3;
  span {
    color: #fff;
    font-weight: 600;
    font-size: 16px;
    position: relative;
    text-transform: capitalize;
    @include transition3;
  }
  &:hover,
  &.active {
    border-color: transparent;
    outline: 0 none;
  }
}

.sc-button span {
  color: #fff;
}

$cyan: #247f2c;
$dark: #ffffff;
$borderW: 2px;

.blob-btn {
  $numOfBlobs: 4;
  z-index: 1;
  position: relative;
  padding: 12.8px 34.5px;
  text-align: center;
  color: $color-1;
  font-weight: 600;
  font-size: 18px;
  background-color: $color-3;
  outline: none;
  border: none;
  transition: color 0.5s;
  cursor: pointer;
  border-radius: 5px;

  &:before {
    content: "";
    z-index: 1;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    // border: $borderW solid $cyan;
    border-radius: 5px;
  }

  &:after {
    content: "";
    z-index: -2;
    position: absolute;
    left: $borderW * 1.5;
    top: $borderW * 1.5;
    width: 100%;
    height: 100%;
    transition: all 0.3s 0.2s;
    border-radius: 5px;
  }

  &:hover {
    color: $dark;
    border-radius: 5px;

    &:after {
      transition: all 0.3s;
      left: 0;
      top: 0;
      border-radius: 5px;
    }
  }

  &__inner {
    z-index: -1;
    overflow: hidden;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    border-radius: 5px;
    background: $color-6;
  }

  // additional container created, because in FF blobs are breaking overflow:hidden of element with svg gooey filter
  &__blobs {
    position: relative;
    display: block;
    height: 100%;
    filter: url("#goo");
  }

  &__blob {
    position: absolute;
    top: $borderW;
    width: calc(100% / $numOfBlobs);
    height: 100%;
    background: $color-3;
    border-radius: 100%;
    transform: translate3d(0, 150%, 0) scale(1.7);
    transition: transform 0.45s;

    @supports (filter: url("#goo")) {
      transform: translate3d(0, 150%, 0) scale(1.4);
    }

    @for $i from 1 through $numOfBlobs {
      &:nth-child(#{$i}) {
        left: ($i - 1) * (calc(120% / $numOfBlobs));
        transition-delay: ($i - 1) * 0.08s;
      }
    }

    .blob-btn:hover & {
      transform: translateZ(0) scale(1.7);

      @supports (filter: url("#goo")) {
        transform: translateZ(0) scale(1.4);
      }
    }
  }
}

.blob-btn.btn-1 {
  background-color: $color-6;
  .blob-btn__inner {
    background: $color-3;
  }
  .blob-btn__blob {
    background: $color-6;
  }
}

.blob-btn.btn-2 {
  background-color: $color-3;
  color: $color-6;
  .blob-btn__inner {
    background: $color-1;
  }
  .blob-btn__blob {
    background: $color-3;
  }
  &:hover {
    color: $color-1;
  }
}

.img-svg {
  display: none;
}

.btn-style {
  padding: unset;
  width: 165px;
  height: 52px;
  line-height: 52px;
}
